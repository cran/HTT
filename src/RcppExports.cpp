// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// distance
NumericMatrix distance(NumericMatrix y, double alpha);
RcppExport SEXP _HTT_distance(SEXP ySEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(distance(y, alpha));
    return rcpp_result_gen;
END_RCPP
}
// TreeGrow
List TreeGrow(NumericMatrix X, NumericMatrix dmat, IntegerVector var_type, List controls);
RcppExport SEXP _HTT_TreeGrow(SEXP XSEXP, SEXP dmatSEXP, SEXP var_typeSEXP, SEXP controlsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type dmat(dmatSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type var_type(var_typeSEXP);
    Rcpp::traits::input_parameter< List >::type controls(controlsSEXP);
    rcpp_result_gen = Rcpp::wrap(TreeGrow(X, dmat, var_type, controls));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HTT_distance", (DL_FUNC) &_HTT_distance, 2},
    {"_HTT_TreeGrow", (DL_FUNC) &_HTT_TreeGrow, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_HTT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
